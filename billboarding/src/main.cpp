/* P3 materials example - see SetMaterial and fragment shader
CPE 471 Cal Poly Z. Wood + S. Sueda
*/

#include <iostream>
#define GLEW_STATIC
#include <GL/glew.h>
#include <GLFW/glfw3.h>

#include "GLSL.h"
#include "Program.h"
#include "MatrixStack.h"
#include "shape.h"
#include "Camera.h"
#include "util.h"
#include "Texture.h"

#define NUM_COORDS (401 * 3) // Number of coordinates in each section of the swing dancing mocap
#define NUM_MULT 6 // Each coordinate generates 5 other coordinates (vertices of the triangle)
#define TIMESTEP .05

using namespace std;
using namespace Eigen;

GLFWwindow *window; // Main application window
string RESOURCE_DIR = ""; // Where the resources are loaded from
shared_ptr<Program> prog;

Camera *cam = new Camera();

static GLfloat knee_buffer[] = {
    0.749688720703,-6.72364624023,4.64307250977,
    0.747695159912,-6.72039611816,4.64551605225,
    0.746350479126,-6.71355224609,4.64519897461,
    0.745452651978,-6.70526123047,4.64300567627,
    0.746608886719,-6.69877746582,4.64188751221,
    0.748759231567,-6.69151428223,4.64200622559,
    0.751396942139,-6.6814855957,4.64099945068,
    0.756255950928,-6.66833557129,4.63742614746,
    0.762101287842,-6.65476257324,4.6347442627,
    0.766263122559,-6.64705200195,4.63266937256,
    0.768767700195,-6.65104125977,4.62763824463,
    0.772739105225,-6.66320129395,4.62161407471,
    0.778688583374,-6.68002868652,4.61652069092,
    0.782906723022,-6.70364257812,4.61553985596,
    0.783191680908,-6.73184509277,4.6231350708,
    0.778056182861,-6.76383789062,4.6366607666,
    0.765950698853,-6.80780822754,4.6539730835,
    0.748380813599,-6.86986206055,4.67808319092,
    0.727283859253,-6.94892822266,4.7082800293,
    0.701438827515,-7.04081848145,4.74312469482,
    0.672400665283,-7.14264465332,4.78387329102,
    0.643275756836,-7.25369750977,4.82806060791,
    0.615646781921,-7.37192504883,4.87041564941,
    0.591057662964,-7.4963458252,4.90814025879,
    0.5692710495,-7.62164001465,4.94142547607,
    0.548603935242,-7.7416796875,4.97138763428,
    0.52513256073,-7.85313598633,4.99591033936,
    0.49851398468,-7.95165100098,5.01201812744,
    0.471925468445,-8.03671142578,5.02127349854,
    0.446911773682,-8.10945556641,5.02484741211,
    0.421279754639,-8.16464904785,5.02430175781,
    0.392753410339,-8.20482849121,5.02297180176,
    0.363461151123,-8.23931884766,5.02029724121,
    0.33325088501,-8.26550537109,5.01945648193,
    0.298881435394,-8.28138366699,5.02317718506,
    0.259811000824,-8.29177307129,5.02432495117,
    0.218103065491,-8.30226745605,5.02105377197,
    0.172449550629,-8.31285644531,5.01760742188,
    0.121385145187,-8.3241418457,5.01312927246,
    0.0668499708176,-8.3489239502,5.01053283691,
    0.00785001814365,-8.38617736816,5.01240142822,
    -0.0567429637909,-8.42457397461,5.01222076416,
    -0.124927597046,-8.47118347168,5.01067047119,
    -0.198502388,-8.52905151367,5.01293273926,
    -0.281728534698,-8.58550354004,5.01416137695,
    -0.375343322754,-8.63499145508,5.01433898926,
    -0.478675575256,-8.68120483398,5.02038543701,
    -0.591059646606,-8.71993530273,5.03007965088,
    -0.712562103271,-8.73974609375,5.04232971191,
    -0.840475006104,-8.73407226562,5.06548614502,
    -0.965665054321,-8.70341003418,5.10379638672,
    -1.08436561584,-8.65360717773,5.15319274902,
    -1.19642379761,-8.6012298584,5.20846984863,
    -1.30061233521,-8.56272094727,5.26039489746,
    -1.40286407471,-8.53692810059,5.30272766113,
    -1.50998046875,-8.51119934082,5.33708190918,
    -1.61533233643,-8.48851806641,5.36310974121,
    -1.71300628662,-8.48514282227,5.38525756836,
    -1.81106201172,-8.49309387207,5.40175842285,
    -1.90891052246,-8.50333862305,5.40289001465,
    -2.00318878174,-8.51788818359,5.38856018066,
    -2.09569351196,-8.53440612793,5.35862182617,
    -2.1899041748,-8.55248474121,5.31503540039,
    -2.29221359253,-8.56725158691,5.2608190918,
    -2.39937576294,-8.57475219727,5.19589782715,
    -2.50624511719,-8.57568054199,5.12656738281,
    -2.62278564453,-8.55033935547,5.05100524902,
    -2.7396963501,-8.51236877441,4.97441558838,
    -2.85207611084,-8.45261779785,4.89553649902,
    -2.95364318848,-8.36955566406,4.82119232178,
    -3.03729492188,-8.26416137695,4.75712646484,
    -3.09697357178,-8.13793334961,4.70546417236,
    -3.129894104,-7.9990637207,4.66684326172,
    -3.13714477539,-7.85692260742,4.63804534912,
    -3.12072387695,-7.72181945801,4.620831604,
    -3.08678985596,-7.60405578613,4.618309021,
    -3.05015808105,-7.51260192871,4.61920898438,
    -3.02546569824,-7.4518170166,4.60536376953,
    -3.01392364502,-7.41476806641,4.57205535889,
    -3.0057635498,-7.3881829834,4.53421234131,
    -2.99512298584,-7.36259033203,4.50875946045,
    -2.98191009521,-7.33484375,4.4954019165,
    -2.97084350586,-7.31136352539,4.48850585938,
    -2.96601348877,-7.30510192871,4.49028961182,
    -2.9663873291,-7.31328674316,4.49707489014,
    -2.97153961182,-7.32557189941,4.50333984375,
    -2.97996520996,-7.33633850098,4.51179412842,
    -2.99095367432,-7.33859802246,4.52289855957,
    -3.00589447021,-7.33574951172,4.53444824219,
    -3.0207131958,-7.33537963867,4.54516235352,
    -3.03224914551,-7.33597412109,4.5538470459,
    -3.04435668945,-7.33265808105,4.55925201416,
    -3.05723083496,-7.32985046387,4.56406158447,
    -3.06771942139,-7.33203308105,4.57110687256,
    -3.0756842041,-7.32794006348,4.57584533691,
    -3.0803137207,-7.30725891113,4.57397949219,
    -3.08033508301,-7.27459594727,4.56873565674,
    -3.07754577637,-7.23774353027,4.56214569092,
    -3.07514099121,-7.19808776855,4.55480804443,
    -3.07378662109,-7.15567749023,4.54914215088,
    -3.06952728271,-7.10941589355,4.54164398193,
    -3.05933410645,-7.05893798828,4.53253173828,
    -3.0471572876,-7.00577697754,4.52159332275,
    -3.03733276367,-6.94843383789,4.5059387207,
    -3.02964935303,-6.88520141602,4.49051208496,
    -3.02427581787,-6.81829345703,4.48155456543,
    -3.01686737061,-6.74584716797,4.47864746094,
    -3.00053894043,-6.66668945312,4.47609893799,
    -2.97390472412,-6.58656799316,4.47697937012,
    -2.93045837402,-6.50606262207,4.49239868164,
    -2.86403320312,-6.42545593262,4.53065551758,
    -2.77968200684,-6.34841186523,4.58946411133,
    -2.68970245361,-6.27957214355,4.66017913818,
    -2.61292327881,-6.22458312988,4.73476593018,
    -2.5564453125,-6.17980773926,4.80428100586,
    -2.55917877197,-6.14823974609,4.86821044922,
    -2.57865753174,-6.10368408203,4.92324615479,
    -2.61191589355,-6.04852661133,4.96884490967,
    -2.6510055542,-5.98557128906,5.00133728027,
    -2.69275085449,-5.91487304688,5.01707519531,
    -2.73498809814,-5.83894165039,5.0151864624,
    -2.77521331787,-5.76163269043,4.9940032959,
    -2.80708129883,-5.68377380371,4.95496032715,
    -2.82011535645,-5.61087097168,4.90369415283,
    -2.80931274414,-5.55577880859,4.84852325439,
    -2.7805380249,-5.52619750977,4.79408966064,
    -2.7389440918,-5.52077575684,4.74018280029,
    -2.68378387451,-5.52978393555,4.69728210449,
    -2.61955322266,-5.53908752441,4.67731872559,
    -2.55877426147,-5.54325866699,4.67120300293,
    -2.514712677,-5.54214294434,4.66376220703,
    -2.49307662964,-5.52877197266,4.65257568359,
    -2.48687896729,-5.50079956055,4.64273956299,
    -2.47763549805,-5.46331848145,4.63304748535,
    -2.45676315308,-5.42490783691,4.62500427246,
    -2.43249511719,-5.39096435547,4.62766906738,
    -2.41265274048,-5.35342407227,4.6431930542,
    -2.40428024292,-5.30128662109,4.66672698975,
    -2.41235458374,-5.23166442871,4.69683166504,
    -2.43533874512,-5.14676879883,4.73754333496,
    -2.46611221313,-5.05164093018,4.7864465332,
    -2.51216033936,-4.90561553955,4.84863647461,
    -2.5623614502,-4.73978546143,4.91855407715,
    -2.61049316406,-4.54783660889,4.99600219727,
    -2.65106140137,-4.34067687988,5.08538848877,
    -2.67903900146,-4.1296005249,5.18179077148,
    -2.68798248291,-3.91852172852,5.26571044922,
    -2.68032867432,-3.71433013916,5.32746398926,
    -2.66319213867,-3.52074798584,5.3684161377,
    -2.64052490234,-3.32285369873,5.3889453125,
    -2.60781799316,-3.09948150635,5.39104309082,
    -2.55579605103,-2.85301971436,5.37939086914,
    -2.48145095825,-2.59832397461,5.3554284668,
    -2.38993545532,-2.33723571777,5.31574157715,
    -2.28843338013,-2.06725830078,5.26182739258,
    -2.1764125061,-1.78750228882,5.20182495117,
    -2.05308547974,-1.49913757324,5.13563964844,
    -1.92178329468,-1.20359786987,5.06289215088,
    -1.77591644287,-0.895308990479,4.99664428711,
    -1.60595214844,-0.571352081299,4.94928955078,
    -1.41032180786,-0.244045658112,4.91958679199,
    -1.18885536194,0.0766181278229,4.90516204834,
    -0.940149154663,0.383131904602,4.90491149902,
    -0.664720993042,0.667911376953,4.91560150146,
    -0.372119293213,0.941941680908,4.93761047363,
    -0.0622726011276,1.13026512146,4.9495526123,
    0.242277507782,1.29645492554,4.96620239258,
    0.51447265625,1.39076263428,4.96206634521,
    0.780831069946,1.47362854004,4.95658630371,
    0.98724105835,1.51281387329,4.91630981445,
    1.17500389099,1.55024932861,4.87853393555,
    1.33931869507,1.58338821411,4.84274841309,
    1.48648834229,1.61440979004,4.80827545166,
    1.56608795166,1.64690429688,4.79885955811,
    1.63121322632,1.68874816895,4.81451599121,
    1.69313812256,1.72065750122,4.8441104126,
    1.76294952393,1.72722732544,4.86894683838,
    1.83252426147,1.70692016602,4.88175476074,
    1.89504180908,1.66386795044,4.88677124023,
    1.94959381104,1.60623443604,4.89530761719,
    1.99319824219,1.54568466187,4.91224151611,
    2.03011154175,1.48183776855,4.93362030029,
    2.06661987305,1.40697601318,4.95673309326,
    2.10315338135,1.32439910889,4.97901672363,
    2.14097320557,1.23609329224,4.9959677124,
    2.17806762695,1.14098976135,5.00807098389,
    2.21660308838,1.04686698914,5.02109222412,
    2.25656616211,0.955792312622,5.03185943604,
    2.2873008728,0.86080078125,5.03347503662,
    2.30834136963,0.766734085083,5.03223571777,
    2.32570724487,0.68300239563,5.03488220215,
    2.33907501221,0.606674232483,5.03455627441,
    2.34610778809,0.532547798157,5.02836700439,
    2.34690979004,0.460784301758,5.02451721191,
    2.34218032837,0.391816635132,5.02241394043,
    2.33040985107,0.319735851288,5.01670471191,
    2.31220184326,0.234640312195,5.01085540771,
    2.2893788147,0.132354717255,5.00621612549,
    2.26381439209,0.007796433568,4.99835601807,
    2.23944061279,-0.142666025162,4.98920043945,
    2.21608428955,-0.317187728882,4.98081542969,
    2.18955734253,-0.514658966064,4.9684197998,
    2.15549804688,-0.722679977417,4.9529598999,
    2.11108612061,-0.914903259277,4.94350341797,
    2.0569291687,-1.07540939331,4.94771575928,
    1.99327285767,-1.21218399048,4.96803619385,
    1.92512512207,-1.35056747437,5.00041259766,
    1.86454238892,-1.50833328247,5.04174621582,
    1.81599716187,-1.6837878418,5.09207427979,
    1.7772996521,-1.86963348389,5.1464276123,
    1.74868621826,-2.06554611206,5.19836120605,
    1.72884490967,-2.2750062561,5.24306152344,
    1.71209640503,-2.5014302063,5.27350280762,
    1.69146347046,-2.751328125,5.28856140137,
    1.66512527466,-3.02433074951,5.29322570801,
    1.63347305298,-3.30983917236,5.28613830566,
    1.59507537842,-3.60218322754,5.2669329834,
    1.54961883545,-3.90332550049,5.23844970703,
    1.49699371338,-4.21021881104,5.2038659668,
    1.43666671753,-4.51734924316,5.16399475098,
    1.3645664978,-4.82220581055,5.11787200928,
    1.27722518921,-5.12744873047,5.07218353271,
    1.17589439392,-5.42404846191,5.02480621338,
    1.05664108276,-5.70708251953,4.97509155273,
    0.918658447266,-5.9854473877,4.93178344727,
    0.770924377441,-6.24436950684,4.88777496338,
    0.61756023407,-6.47085632324,4.83711242676,
    0.456402244568,-6.67432312012,4.78864654541,
    0.289288959503,-6.85119506836,4.74413696289,
    0.123403730392,-6.99192565918,4.69531433105,
    -0.0320349287987,-7.10889099121,4.64539703369,
    -0.166207885742,-7.2106237793,4.60366699219,
    -0.273331794739,-7.29729797363,4.56889312744,
    -0.358429222107,-7.3709552002,4.53836639404,
    -0.432128295898,-7.42731567383,4.51080657959,
    -0.501556816101,-7.46928466797,4.48554473877,
    -0.567154541016,-7.51196716309,4.46877960205,
    -0.61696056366,-7.56190979004,4.46341491699,
    -0.633011283875,-7.6123626709,4.46854095459,
    -0.617504882812,-7.65835449219,4.4813067627,
    -0.596089668274,-7.69541687012,4.49537078857,
    -0.590777740479,-7.72760070801,4.51669769287,
    -0.602395133972,-7.76193481445,4.55243835449,
    -0.618915405273,-7.8019909668,4.5973538208,
    -0.633246269226,-7.84794189453,4.64433654785,
    -0.642455825806,-7.89027709961,4.68951263428,
    -0.640374679565,-7.92419250488,4.73294403076,
    -0.624521484375,-7.95284301758,4.77553955078,
    -0.59537651062,-7.97764709473,4.814503479,
    -0.553603668213,-7.99538879395,4.84741394043,
    -0.5005859375,-8.0049230957,4.87273956299,
    -0.439561805725,-8.00696899414,4.88967834473,
    -0.37352306366,-8.00277648926,4.90283172607,
    -0.30071855545,-7.99426513672,4.9158215332,
    -0.221036643982,-7.98031433105,4.92463348389,
    -0.143317842484,-7.95997497559,4.92525878906,
    -0.0844640159607,-7.93670471191,4.91964447021,
    -0.0578366661072,-7.92612976074,4.9137020874,
    -0.0631146097183,-7.94452453613,4.91086120605,
    -0.0868498420715,-7.98428833008,4.90341461182,
    -0.107845497131,-8.02763977051,4.87968048096,
    -0.112617177963,-8.06472045898,4.83813049316,
    -0.106958599091,-8.09237854004,4.78960845947,
    -0.108419837952,-8.11804260254,4.75073272705,
    -0.127246789932,-8.15734008789,4.73721435547,
    -0.154498357773,-8.21092956543,4.74635894775,
    -0.177398223877,-8.26138916016,4.75781982422,
    -0.194142932892,-8.30334655762,4.76373809814,
    -0.21392572403,-8.34057495117,4.76944030762,
    -0.248897247314,-8.37752746582,4.77993591309,
    -0.296894683838,-8.42004272461,4.79599975586,
    -0.346287002563,-8.4594128418,4.81005889893,
    -0.390783576965,-8.49106994629,4.81953399658,
    -0.429392433167,-8.52193054199,4.82966186523,
    -0.462206840515,-8.54805053711,4.83867340088,
    -0.48973033905,-8.56915405273,4.84576019287,
    -0.515496635437,-8.59208496094,4.85351959229,
    -0.542022285461,-8.61755859375,4.85902954102,
    -0.569326858521,-8.64501159668,4.86137207031,
    -0.595789146423,-8.67383728027,4.86337799072,
    -0.618501243591,-8.70340148926,4.86668182373,
    -0.636530570984,-8.72999755859,4.86931213379,
    -0.648815383911,-8.74842895508,4.87090454102,
    -0.65627822876,-8.76281188965,4.87358093262,
    -0.660723419189,-8.77622924805,4.87287536621,
    -0.661193008423,-8.78492004395,4.86959899902,
    -0.658878631592,-8.78905700684,4.86829864502,
    -0.656219863892,-8.79129394531,4.86701507568,
    -0.654178543091,-8.79401855469,4.86579803467,
    -0.652297668457,-8.7976953125,4.86469665527,
    -0.650973205566,-8.8003729248,4.86331634521,
    -0.650492935181,-8.80161621094,4.86246856689,
    -0.649498748779,-8.80271057129,4.86218383789,
    -0.648750534058,-8.80389648438,4.86233703613,
    -0.648040847778,-8.80421203613,4.86202758789,
    -0.646424942017,-8.80415527344,4.86110290527,
    -0.64548828125,-8.80406066895,4.86042053223,
    -0.646239624023,-8.80331420898,4.86033905029,
    -0.648921127319,-8.80363769531,4.86152496338,
    -0.653434295654,-8.8059954834,4.86294342041,
    -0.658328933716,-8.80802490234,4.86329223633,
    -0.662412567139,-8.8079107666,4.86227294922,
    -0.666188430786,-8.80700927734,4.85975891113,
    -0.670271148682,-8.80599243164,4.85780548096,
    -0.674443588257,-8.80501098633,4.85697479248,
    -0.677718734741,-8.80641479492,4.85739868164,
    -0.679299850464,-8.80758178711,4.85816864014,
    -0.681063232422,-8.80564086914,4.85815246582,
    -0.683735351562,-8.80427062988,4.85910766602,
    -0.686363601685,-8.80407104492,4.85960571289,
    -0.689635925293,-8.80416992188,4.85912475586,
    -0.693080215454,-8.80589416504,4.85965637207,
    -0.695760116577,-8.80770263672,4.86039337158,
    -0.697284164429,-8.80772888184,4.8601776123,
    -0.697338943481,-8.8069909668,4.85970947266,
    -0.696557388306,-8.80681213379,4.86065612793,
    -0.696083297729,-8.8066986084,4.86220428467,
    -0.69666305542,-8.80625732422,4.86207000732,
    -0.697181091309,-8.8054901123,4.86097625732,
    -0.696060943604,-8.80265258789,4.8604675293,
    -0.693892822266,-8.7982421875,4.85964752197,
    -0.691579742432,-8.79442077637,4.85780700684,
    -0.689636993408,-8.79158874512,4.85606231689,
    -0.689961929321,-8.79116638184,4.85541290283,
    -0.692779998779,-8.79396362305,4.85494812012,
    -0.696159362793,-8.79930419922,4.85587860107,
    -0.700447006226,-8.80621948242,4.85791931152,
    -0.706241378784,-8.8135760498,4.85715606689,
    -0.713686447144,-8.81994750977,4.85645904541,
    -0.723207397461,-8.82330627441,4.85724761963,
    -0.733062744141,-8.82612426758,4.85783569336,
    -0.742183837891,-8.82938537598,4.85859100342,
    -0.749623794556,-8.82728027344,4.8577130127,
    -0.754340744019,-8.82120483398,4.85786407471,
    -0.757375717163,-8.81571838379,4.85964019775,
    -0.75681968689,-8.80783874512,4.86012664795,
    -0.750710678101,-8.79451049805,4.86104064941,
    -0.74035736084,-8.7751763916,4.85956207275,
    -0.725140762329,-8.74997497559,4.85481292725,
    -0.705539321899,-8.7233770752,4.85272644043,
    -0.684086837769,-8.69735839844,4.85286712646,
    -0.661170730591,-8.666875,4.85104614258,
    -0.636821403503,-8.6327545166,4.84716674805,
    -0.610831947327,-8.59892700195,4.8434576416,
    -0.583084831238,-8.56438842773,4.83936248779,
    -0.555001029968,-8.52637451172,4.83465637207,
    -0.5292993927,-8.48576965332,4.83104949951,
    -0.505667152405,-8.4466998291,4.82776306152,
    -0.479915275574,-8.40596374512,4.82368804932,
    -0.454329948425,-8.36262512207,4.82011291504,
    -0.432222480774,-8.31980041504,4.81663696289,
    -0.412211532593,-8.27588317871,4.81392852783,
    -0.393019371033,-8.22987854004,4.81188354492,
    -0.371958732605,-8.18130187988,4.80811340332,
    -0.348675880432,-8.13001647949,4.80414916992,
    -0.325046386719,-8.07254333496,4.79764465332,
    -0.301105537415,-8.0099798584,4.790262146,
    -0.276576423645,-7.94529785156,4.78656982422,
    -0.250315494537,-7.87389160156,4.78154937744,
    -0.22073764801,-7.79355407715,4.77256469727,
    -0.188791866302,-7.70855102539,4.76288238525,
    -0.154757614136,-7.6195135498,4.75322631836,
    -0.117196264267,-7.51625915527,4.74055755615,
    -0.0744105577469,-7.39164245605,4.72276184082,
    -0.0243625164032,-7.25241394043,4.70567108154,
    0.0342681741714,-7.10186645508,4.6892086792,
    0.100858411789,-6.9327520752,4.66516296387,
    0.175425281525,-6.74567077637,4.64054168701,
    0.261270084381,-6.53773620605,4.62546783447,
    0.358450813293,-6.29752563477,4.61867950439,
    0.460622596741,-6.03062255859,4.62032226562,
    0.55652961731,-5.74784912109,4.63427825928,
    0.636452598572,-5.45612670898,4.66199157715,
    0.693478012085,-5.1638067627,4.70065612793,
    0.720759429932,-4.87045684814,4.74182128906,
    0.714684448242,-4.57577148438,4.78113769531,
    0.675499038696,-4.28169555664,4.82376251221,
    0.606324806213,-3.99024139404,4.87272735596,
    0.506917457581,-3.70937835693,4.92321685791,
    0.378129959106,-3.44688537598,4.97293182373,
    0.22735332489,-3.20441436768,5.02390472412,
    0.0588998031616,-2.98313293457,5.07468658447,
    -0.127154636383,-2.78527648926,5.12506591797,
    -0.326685523987,-2.60882415771,5.17637329102,
    -0.532688026428,-2.44883850098,5.22773620605,
    -0.744538269043,-2.30349441528,5.27541015625,
    -0.960702514648,-2.18003555298,5.31845825195,
    -1.17333427429,-2.0814944458,5.35594238281,
    -1.38100509644,-2.00119598389,5.38392822266,
    -1.58440490723,-1.93317214966,5.40772766113,
    -1.78240814209,-1.86792327881,5.43374145508,
    -1.96729644775,-1.84513214111,5.44093994141,
    -2.13848632812,-1.82338485718,5.44542236328,
    -2.29230117798,-1.81425933838,5.44192504883,
    -2.42957550049,-1.81196777344,5.43050964355,
    -2.54869186401,-1.8122984314,5.41445556641,
    -2.64763183594,-1.82085067749,5.3923626709,
    -2.73087738037,-1.83236862183,5.36433959961,
    -2.80839324951,-1.84326980591,5.33161621094,
    -2.88890014648,-1.84824752808,5.30122375488,
    -2.97761779785,-1.84052947998,5.27934570312,
    -3.07592773438,-1.82608276367,5.26056945801

};
GLuint KneeArrayID;
GLuint KneeNormalID;
GLuint KneeColorID;
static GLfloat g_vertex_knee_buffer[NUM_COORDS * NUM_MULT];
static GLfloat g_vertex_knee_normal_buffer[NUM_COORDS * NUM_MULT];
static GLfloat knee_color_buffer[NUM_COORDS * NUM_MULT / 3];
GLuint knee_vertexbuffer;

static GLfloat ankle_buffer[] = {
    1.28916183472,-8.21157104492,8.1089050293,
    1.2803012085,-8.19046569824,8.11358459473,
    1.27313339233,-8.17284545898,8.11409667969,
    1.26733085632,-8.15514648438,8.1127557373,
    1.26167922974,-8.13690917969,8.10910705566,
    1.25671546936,-8.12233886719,8.09972595215,
    1.25235626221,-8.1094354248,8.08478942871,
    1.24712715149,-8.09660644531,8.06748901367,
    1.2419758606,-8.08585693359,8.04565429688,
    1.23889556885,-8.07860046387,8.01920043945,
    1.23769439697,-8.07638244629,7.99161804199,
    1.2387247467,-8.07603149414,7.96242736816,
    1.24350219727,-8.07632080078,7.9334387207,
    1.25209510803,-8.08164855957,7.90945922852,
    1.26332801819,-8.09243164062,7.89008483887,
    1.27679122925,-8.10503051758,7.87247680664,
    1.29377120972,-8.11782653809,7.85934326172,
    1.31467071533,-8.13150756836,7.85282287598,
    1.33622436523,-8.14679382324,7.85204101562,
    1.35658126831,-8.16472900391,7.85702697754,
    1.37839477539,-8.1842755127,7.86653015137,
    1.40069900513,-8.20493652344,7.8802130127,
    1.4229208374,-8.22743041992,7.89734375,
    1.44356369019,-8.24715576172,7.91737487793,
    1.4560874939,-8.26303588867,7.94011108398,
    1.46127365112,-8.28159545898,7.96062255859,
    1.46097259521,-8.30184753418,7.9754083252,
    1.45377563477,-8.31850708008,7.98534545898,
    1.44175338745,-8.33374694824,7.98787658691,
    1.42571334839,-8.34902954102,7.98103515625,
    1.40492172241,-8.36348999023,7.96642456055,
    1.37967773438,-8.37828857422,7.9431262207,
    1.35040664673,-8.39207824707,7.91113464355,
    1.31728469849,-8.40192443848,7.87271850586,
    1.27880065918,-8.4090246582,7.82900512695,
    1.2330721283,-8.4171081543,7.78239074707,
    1.1811920166,-8.4219317627,7.73676391602,
    1.12651313782,-8.42179016113,7.69451599121,
    1.07044151306,-8.42156311035,7.65866027832,
    1.01343399048,-8.41862304688,7.63302978516,
    0.956526489258,-8.41229614258,7.62154541016,
    0.901835327148,-8.40624084473,7.62840698242,
    0.855773086548,-8.40141601562,7.65693115234,
    0.824508056641,-8.39607299805,7.7112097168,
    0.806699447632,-8.39026000977,7.79349243164,
    0.795303268433,-8.38871765137,7.89966552734,
    0.788799209595,-8.39702392578,8.02510070801,
    0.791455764771,-8.41559204102,8.1679510498,
    0.806481246948,-8.43680175781,8.32430908203,
    0.834977111816,-8.45528076172,8.49092468262,
    0.873560409546,-8.4708807373,8.66501647949,
    0.919066772461,-8.48354125977,8.84353271484,
    0.972243118286,-8.49145446777,9.02568725586,
    1.03457061768,-8.49143859863,9.21184143066,
    1.10631317139,-8.47895935059,9.40198425293,
    1.18571395874,-8.45268493652,9.59297851562,
    1.26665206909,-8.41688171387,9.7818536377,
    1.34189910889,-8.37339477539,9.96587585449,
    1.40800888062,-8.31933837891,10.1413781738,
    1.46564865112,-8.25638122559,10.3076062012,
    1.51642578125,-8.18992675781,10.4609387207,
    1.55746963501,-8.11873413086,10.5974731445,
    1.58952484131,-8.04092590332,10.7180541992,
    1.61379867554,-7.95816589355,10.8206140137,
    1.6276210022,-7.87250427246,10.9034838867,
    1.63283416748,-7.78588439941,10.9689526367,
    1.62997329712,-7.70125366211,11.0191955566,
    1.61804611206,-7.62089538574,11.0561779785,
    1.59867965698,-7.54389892578,11.0815441895,
    1.571434021,-7.47165161133,11.0958557129,
    1.53635467529,-7.40365600586,11.1002819824,
    1.49932617188,-7.33701049805,11.0984838867,
    1.46544555664,-7.27325317383,11.0958850098,
    1.4375062561,-7.21249755859,11.0984069824,
    1.41781433105,-7.15565185547,11.1095336914,
    1.40491744995,-7.10373168945,11.1296044922,
    1.39461914062,-7.05380065918,11.1581396484,
    1.38385971069,-7.00584716797,11.1955029297,
    1.37104187012,-6.96270019531,11.2431787109,
    1.35360748291,-6.92387329102,11.3010302734,
    1.33137741089,-6.88867797852,11.3670996094,
    1.30789871216,-6.86067199707,11.4407922363,
    1.28573013306,-6.83858093262,11.5206750488,
    1.26369476318,-6.82109741211,11.6029321289,
    1.24015068054,-6.80965820312,11.6831237793,
    1.21485580444,-6.80266662598,11.7576721191,
    1.18817626953,-6.79741699219,11.8233081055,
    1.15966995239,-6.79136230469,11.8782714844,
    1.12978294373,-6.7872467041,11.9229406738,
    1.10123512268,-6.78680419922,11.9559545898,
    1.07500450134,-6.78784606934,11.9765222168,
    1.05046134949,-6.78782836914,11.9849475098,
    1.02743759155,-6.78618530273,11.9802893066,
    1.00556221008,-6.7868145752,11.9622155762,
    0.984370651245,-6.78909606934,11.9327209473,
    0.965991592407,-6.79110839844,11.8941638184,
    0.952006378174,-6.79434631348,11.846796875,
    0.941036987305,-6.7971661377,11.7913293457,
    0.932088928223,-6.80115722656,11.7306164551,
    0.925422897339,-6.80919677734,11.6660144043,
    0.922249221802,-6.81910644531,11.598626709,
    0.921870040894,-6.83177734375,11.5334924316,
    0.921619110107,-6.84701904297,11.4742016602,
    0.920311889648,-6.86309387207,11.4210766602,
    0.917667922974,-6.88372314453,11.379329834,
    0.91218963623,-6.91096923828,11.3550354004,
    0.902143478394,-6.94413024902,11.3485314941,
    0.887060012817,-6.9822052002,11.3600219727,
    0.867352752686,-7.02373840332,11.3908642578,
    0.841558990479,-7.06863464355,11.4387915039,
    0.80915145874,-7.11671875,11.5001818848,
    0.773686599731,-7.16492248535,11.5733203125,
    0.736156768799,-7.21301879883,11.6554077148,
    0.696099243164,-7.2645111084,11.7439318848,
    0.655302429199,-7.31825866699,11.8362365723,
    0.614171791077,-7.3721875,11.9277685547,
    0.572062759399,-7.4265057373,12.0148632812,
    0.528918266296,-7.47990722656,12.09578125,
    0.485107421875,-7.53247131348,12.1687329102,
    0.440672683716,-7.58476501465,12.2303271484,
    0.394923439026,-7.63595153809,12.2783959961,
    0.348670921326,-7.68528137207,12.3088464355,
    0.304033317566,-7.73189697266,12.3186413574,
    0.260176124573,-7.77926879883,12.3115563965,
    0.215076007843,-7.82998413086,12.2879846191,
    0.170812091827,-7.88026794434,12.2450048828,
    0.128286371231,-7.92894592285,12.1857836914,
    0.0835671710968,-7.97925048828,12.1165270996,
    0.0341921305656,-8.03143737793,12.0398974609,
    -0.0224434542656,-8.08447631836,11.9580407715,
    -0.0904482078552,-8.13588256836,11.8736877441,
    -0.170308837891,-8.17917297363,11.7867724609,
    -0.262207603455,-8.21288330078,11.6989440918,
    -0.367768058777,-8.24145202637,11.6148962402,
    -0.489263839722,-8.26763061523,11.5384399414,
    -0.630698661804,-8.28991577148,11.472791748,
    -0.791400985718,-8.30207580566,11.4186132812,
    -0.970439834595,-8.29757141113,11.3766174316,
    -1.17234893799,-8.27346557617,11.3484265137,
    -1.39622787476,-8.22516601562,11.3337780762,
    -1.63945571899,-8.15007263184,11.3364404297,
    -1.90383621216,-8.04911010742,11.3618408203,
    -2.18985137939,-7.91938232422,11.4112902832,
    -2.49333221436,-7.75398742676,11.4804907227,
    -2.80393371582,-7.54937744141,11.5679736328,
    -3.11656738281,-7.30242248535,11.6664123535,
    -3.4310925293,-7.00961791992,11.7675695801,
    -3.73693756104,-6.67359191895,11.8773156738,
    -4.02311981201,-6.29237304688,11.9939208984,
    -4.28774291992,-5.86274169922,12.1173278809,
    -4.52488555908,-5.39258666992,12.2475170898,
    -4.72642181396,-4.89287017822,12.3753356934,
    -4.89377593994,-4.3635446167,12.4974291992,
    -5.02793792725,-3.80485137939,12.6132507324,
    -5.12477905273,-3.22044189453,12.7203771973,
    -5.1921862793,-2.61500427246,12.8171972656,
    -5.18656677246,-1.9839402771,12.9055822754,
    -5.14261291504,-1.34387985229,12.9819018555,
    -5.04352722168,-0.694447021484,13.0440686035,
    -4.88836669922,-0.0426831388474,13.0936669922,
    -4.67811096191,0.604080085754,13.1285083008,
    -4.42639465332,1.24572723389,13.1492663574,
    -4.10660461426,1.84327804565,13.144152832,
    -3.73688415527,2.41457977295,13.1235961914,
    -3.31863830566,2.94286682129,13.0895202637,
    -2.85810974121,3.4104888916,13.034967041,
    -2.37996307373,3.8418145752,12.9650073242,
    -1.8847543335,4.22283935547,12.8711376953,
    -1.37963790894,4.54741271973,12.7526611328,
    -0.87320930481,4.81581268311,12.6116455078,
    -0.362398834229,5.03642211914,12.4542175293,
    0.162090530396,5.21360168457,12.289074707,
    0.689463653564,5.34067321777,12.114831543,
    1.20702568054,5.41020751953,11.9281555176,
    1.71115951538,5.42096618652,11.7353601074,
    2.19682693481,5.37133178711,11.5406262207,
    2.661121521,5.26218566895,11.3444946289,
    3.10162109375,5.09938720703,11.1530078125,
    3.52051361084,4.88024017334,10.9749060059,
    3.91847076416,4.60355102539,10.8126940918,
    4.28360870361,4.28066436768,10.6619042969,
    4.60756774902,3.91699951172,10.5187072754,
    4.89060791016,3.51898925781,10.3839111328,
    5.13384460449,3.09629730225,10.2617578125,
    5.34116210938,2.64804992676,10.1553363037,
    5.51474121094,2.17550140381,10.0647857666,
    5.6533215332,1.68901138306,9.98995117188,
    5.7575402832,1.19387451172,9.92749145508,
    5.82712280273,0.69034538269,9.87202758789,
    5.85980285645,0.182524337769,9.82081665039,
    5.8546697998,-0.325656280518,9.7721887207,
    5.81276855469,-0.833526077271,9.72574401855,
    5.73606201172,-1.34203460693,9.68302185059,
    5.62622131348,-1.8519380188,9.64458496094,
    5.48286560059,-2.35919128418,9.60885925293,
    5.30612976074,-2.86062835693,9.57640991211,
    5.09963165283,-3.35432159424,9.54877502441,
    4.86524993896,-3.83012207031,9.52555603027,
    4.60444946289,-4.28032562256,9.50890441895,
    4.32382385254,-4.70080688477,9.50045715332,
    4.03051727295,-5.08621917725,9.49761901855,
    3.73284698486,-5.42874511719,9.4955657959,
    3.43706939697,-5.72602294922,9.49079956055,
    3.14937561035,-5.98524536133,9.48464355469,
    2.88203674316,-6.20690185547,9.47939880371,
    2.64065979004,-6.39391113281,9.47737182617,
    2.42688751221,-6.55309387207,9.48049987793,
    2.2426260376,-6.68601623535,9.48694091797,
    2.08640411377,-6.79095703125,9.49337890625,
    1.95664154053,-6.86679260254,9.49856994629,
    1.85317276001,-6.91441040039,9.50210266113,
    1.77431610107,-6.93584106445,9.50340942383,
    1.71632217407,-6.93613464355,9.50137817383,
    1.67535797119,-6.91633178711,9.49444885254,
    1.64707778931,-6.87566772461,9.48313171387,
    1.62947341919,-6.81975585938,9.47183898926,
    1.62041442871,-6.75357299805,9.46436645508,
    1.61660369873,-6.67691833496,9.45987731934,
    1.61491439819,-6.59274230957,9.45803710938,
    1.61281204224,-6.50482299805,9.46045837402,
    1.60887908936,-6.41276855469,9.46739257812,
    1.60109436035,-6.31829589844,9.47717590332,
    1.58918151855,-6.22532836914,9.4875402832,
    1.57597625732,-6.13700683594,9.49858703613,
    1.56555114746,-6.0563494873,9.51100036621,
    1.55962142944,-5.98503234863,9.52454406738,
    1.55720581055,-5.92125061035,9.53921020508,
    1.55625534058,-5.8633013916,9.55362060547,
    1.55507400513,-5.8107208252,9.5677947998,
    1.5530657959,-5.76069946289,9.5828918457,
    1.55030014038,-5.7117590332,9.60006713867,
    1.54706207275,-5.66687805176,9.62269958496,
    1.54263809204,-5.62907714844,9.65186401367,
    1.53828353882,-5.59697570801,9.6872479248,
    1.53455627441,-5.56854003906,9.73135498047,
    1.52964782715,-5.54440490723,9.7827532959,
    1.52391296387,-5.5273638916,9.83725585938,
    1.51910812378,-5.51874084473,9.89426452637,
    1.51581726074,-5.51730529785,9.95382629395,
    1.51493530273,-5.52063354492,10.01440979,
    1.51934921265,-5.52456298828,10.0774285889,
    1.53182922363,-5.53403625488,10.1415582275,
    1.54799514771,-5.55598327637,10.1981713867,
    1.56309112549,-5.58074157715,10.2488513184,
    1.58065216064,-5.59870239258,10.3025354004,
    1.59983078003,-5.61497497559,10.3583349609,
    1.61880874634,-5.63414978027,10.4118762207,
    1.63988861084,-5.6513458252,10.4631408691,
    1.66109130859,-5.66404907227,10.5127624512,
    1.67790786743,-5.67590209961,10.5588525391,
    1.68979141235,-5.6844317627,10.5985583496,
    1.69829833984,-5.68566589355,10.6311083984,
    1.70174667358,-5.68364013672,10.6551062012,
    1.69839706421,-5.68054931641,10.6683557129,
    1.68852798462,-5.67369750977,10.6722485352,
    1.67412338257,-5.66523803711,10.6681091309,
    1.65656494141,-5.66021179199,10.6551220703,
    1.63492370605,-5.65757263184,10.6314575195,
    1.60790802002,-5.65448852539,10.5944238281,
    1.57592681885,-5.6532244873,10.5421386719,
    1.54173461914,-5.65555419922,10.4738757324,
    1.50850097656,-5.66176513672,10.3917175293,
    1.47787826538,-5.67407348633,10.2984777832,
    1.44916412354,-5.6930456543,10.1953778076,
    1.41898086548,-5.72054260254,10.0827575684,
    1.38157669067,-5.75737243652,9.9620135498,
    1.33419784546,-5.8022064209,9.83704956055,
    1.28081802368,-5.85686096191,9.71268310547,
    1.22876945496,-5.9228503418,9.59559204102,
    1.18563102722,-6.00691955566,9.48941589355,
    1.14869941711,-6.09819152832,9.39874023438,
    1.11501701355,-6.19262756348,9.32090332031,
    1.09047241211,-6.31364196777,9.24686889648,
    1.06844520569,-6.44897888184,9.18005737305,
    1.04235931396,-6.58215820312,9.1217401123,
    1.01582267761,-6.71845458984,9.07041992188,
    0.990123748779,-6.85595397949,9.02552429199,
    0.966007614136,-6.99555114746,8.98489318848,
    0.946821746826,-7.14038269043,8.94817321777,
    0.935918197632,-7.28789489746,8.91411743164,
    0.931105270386,-7.4323614502,8.88315917969,
    0.928986740112,-7.57333496094,8.85564147949,
    0.926024627686,-7.71161499023,8.82952148438,
    0.919517211914,-7.84393798828,8.80351928711,
    0.911456069946,-7.97020935059,8.77837585449,
    0.902285919189,-8.08989501953,8.75454833984,
    0.892944793701,-8.20147460938,8.7323236084,
    0.886026535034,-8.30946594238,8.71244812012,
    0.881322250366,-8.41163574219,8.69460327148,
    0.878605957031,-8.50372375488,8.67861450195,
    0.877007064819,-8.59141296387,8.66595397949,
    0.876851882935,-8.67414855957,8.65752807617,
    0.879142303467,-8.74902648926,8.6524017334,
    0.881378173828,-8.81864929199,8.64976989746,
    0.881878509521,-8.88256713867,8.6481072998,
    0.882558288574,-8.93773254395,8.64583068848,
    0.885935058594,-8.98528991699,8.64411315918,
    0.891122055054,-9.02781188965,8.64277954102,
    0.893695831299,-9.06060241699,8.64096618652,
    0.890547637939,-9.08348815918,8.63760009766,
    0.883629989624,-9.10085083008,8.63156738281,
    0.877832565308,-9.11254089355,8.62497314453,
    0.871530532837,-9.11944335938,8.61907165527,
    0.86272895813,-9.12440307617,8.61403930664,
    0.856759643555,-9.12687866211,8.60985473633,
    0.854175720215,-9.12463989258,8.6065411377,
    0.852533950806,-9.12032775879,8.60519958496,
    0.85303527832,-9.11504516602,8.6049432373,
    0.854300384521,-9.10581176758,8.60425537109,
    0.854755859375,-9.09311157227,8.60360107422,
    0.855485153198,-9.07814941406,8.60375305176,
    0.857181625366,-9.06150146484,8.60387023926,
    0.860583190918,-9.0460559082,8.60411743164,
    0.864331207275,-9.03071228027,8.60541931152,
    0.86788520813,-9.01257995605,8.6073815918,
    0.871999740601,-8.99552368164,8.60892211914,
    0.875685424805,-8.9808203125,8.60872192383,
    0.878679656982,-8.96391235352,8.60841430664,
    0.880854187012,-8.94440124512,8.60823059082,
    0.882037582397,-8.92498291016,8.60632568359,
    0.881879348755,-8.90563964844,8.6036541748,
    0.882621841431,-8.88788879395,8.60097229004,
    0.886142959595,-8.87232910156,8.59784973145,
    0.888971252441,-8.85601867676,8.59418884277,
    0.890788116455,-8.8402734375,8.59019714355,
    0.893799438477,-8.82471008301,8.58469909668,
    0.896648330688,-8.80903930664,8.57516113281,
    0.898450546265,-8.79551147461,8.56088317871,
    0.900065994263,-8.78287963867,8.54374084473,
    0.900844802856,-8.76750183105,8.52402526855,
    0.900662155151,-8.7498034668,8.50102539062,
    0.900394744873,-8.73333679199,8.47606689453,
    0.897660751343,-8.71707885742,8.45106018066,
    0.89021156311,-8.69773925781,8.42629516602,
    0.879491577148,-8.67172424316,8.4000567627,
    0.865550537109,-8.63873413086,8.37469482422,
    0.84508895874,-8.60049560547,8.35229431152,
    0.815378341675,-8.55292907715,8.33124145508,
    0.778857574463,-8.49552062988,8.31305419922,
    0.739814224243,-8.43500061035,8.29894042969,
    0.697442626953,-8.36845397949,8.28965393066,
    0.652526092529,-8.28797607422,8.28699462891,
    0.605198707581,-8.20230285645,8.29208251953,
    0.556689949036,-8.11489196777,8.30390808105,
    0.518157653809,-8.01589599609,8.32038085938,
    0.496514930725,-7.90417236328,8.34016845703,
    0.489306106567,-7.78744506836,8.36110107422,
    0.490294151306,-7.68100524902,8.38279968262,
    0.498574867249,-7.51220825195,8.41713134766,
    0.526952018738,-7.43669372559,8.42556213379,
    0.563703422546,-7.26275268555,8.44717834473,
    0.606810302734,-7.09633178711,8.466875,
    0.654786529541,-6.93228210449,8.48320922852,
    0.705610580444,-6.76477905273,8.49485656738,
    0.759018249512,-6.59278259277,8.50198974609,
    0.814185256958,-6.41801879883,8.5070880127,
    0.868899841309,-6.2396295166,8.5108001709,
    0.921398010254,-6.06366394043,8.50951721191,
    0.970304946899,-5.88628295898,8.50553955078,
    1.01635780334,-5.69645446777,8.50629089355,
    1.05833518982,-5.50720825195,8.50852233887,
    1.09152290344,-5.32240722656,8.50843811035,
    1.11719863892,-5.13523803711,8.50830322266,
    1.1364138031,-4.94974731445,8.50851989746,
    1.14512275696,-4.76493560791,8.51031982422,
    1.14356201172,-4.58014892578,8.51355102539,
    1.13444488525,-4.40265930176,8.51679382324,
    1.11624710083,-4.23385253906,8.52205810547,
    1.08638397217,-4.0704901123,8.53108032227,
    1.04496566772,-3.91639343262,8.5429675293,
    0.992111587524,-3.77488830566,8.55634033203,
    0.927308044434,-3.64014282227,8.57053222656,
    0.852133407593,-3.50638916016,8.58307495117,
    0.767341537476,-3.37726745605,8.58953430176,
    0.671940536499,-3.25854187012,8.58947265625,
    0.563658294678,-3.1427456665,8.59040527344,
    0.447562217712,-3.03676239014,8.59406738281,
    0.325351333618,-2.95897094727,8.59080566406,
    0.189207744598,-2.89496459961,8.58267883301,
    0.0469760036469,-2.83326721191,8.58022216797,
    -0.0963946819305,-2.7800100708,8.58386291504,
    -0.244060249329,-2.73282104492,8.59041748047,
    -0.391814613342,-2.68847503662,8.59868164062,
    -0.538574752808,-2.64565368652,8.6094720459,
    -0.68419128418,-2.60014434814,8.62303344727,
    -0.830102844238,-2.55399642944,8.63565734863,
    -0.976563720703,-2.51292129517,8.6465612793,
    -1.12083648682,-2.47638473511,8.65624694824,
    -1.26411109924,-2.43965515137,8.66329345703,
    -1.40794631958,-2.40083557129,8.66951293945,
    -1.55212142944,-2.36508148193,8.67714111328,
    -1.69076583862,-2.30062454224,8.69417358398,
    -1.83255691528,-2.29550567627,8.68159912109,
    -1.97146209717,-2.26351486206,8.68244750977,
    -2.10878341675,-2.226769104,8.6809375,
    -2.24488464355,-2.18685623169,8.67713806152,
    -2.37935241699,-2.1460319519,8.67126708984,
    -2.51211471558,-2.10774505615,8.66351318359,
    -2.64375030518,-2.07039459229,8.65380249023,
    -2.77520233154,-2.03161361694,8.64175109863,
    -2.90687774658,-1.99331207275,8.62669799805,
    -3.03827697754,-1.95392425537,8.60815246582
};
GLuint AnkleArrayID;
GLuint AnkleNormalID;
GLuint AnkleColorID;
// Array to fill with the converted vertices
static GLfloat g_vertex_ankle_buffer[NUM_COORDS * NUM_MULT];
static GLfloat g_vertex_ankle_normal_buffer[NUM_COORDS * NUM_MULT];
static GLfloat ankle_color_buffer[NUM_COORDS * NUM_MULT / 3];
GLuint ankle_vertexbuffer;

Texture texture0;
GLint h_texture_0;

int g_width, g_height;
// TODO (leia): remove
int gMat = 0;
int t;

// Eye vectors for viewpoint moving
Vector3f eye = Vector3f();
Vector3f lookAtPt = Vector3f();
Vector3f up = Vector3f(0, 1, 0);
Vector3f eye_forward = Vector3f();
Vector3f eye_right = Vector3f();

GLboolean lock_view = false;
GLboolean lock_y = true;

float phi = 0;
float theta = -M_PI / 2;

static void error_callback(int error, const char *description)
{
    cerr << description << endl;
}

static void calculate_directions()
{
    eye_forward = lookAtPt - eye;
    if (lock_y) {
        eye_forward[1] = 0.0;
    }
    eye_forward.normalize();
    eye_right = Vector3f(-eye_forward.z(), eye_forward.y(), eye_forward.x());
    if (lock_y) {
        eye_right[1] = 0.0;
    }
}

static void key_callback(GLFWwindow *window, int key, int scancode, int action, int mods)
{
    if (key == GLFW_KEY_ESCAPE && action == GLFW_PRESS) {
        glfwSetWindowShouldClose(window, GL_TRUE);
    } else if (key == GLFW_KEY_A) {
        eye -= eye_right / 5; // Move eye left
        cam->moveRight(-1, TIMESTEP);
    } else if (key == GLFW_KEY_D) {
        eye += eye_right / 5; // Move eye right
        cam->moveRight(1, TIMESTEP);
    } else if (key == GLFW_KEY_W) {
        eye += eye_forward / 5; // Move eye forward
        cam->moveFwd(1, TIMESTEP);
    } else if (key == GLFW_KEY_S) {
        eye -= eye_forward / 5; // Move eye backward
        cam->moveFwd(-1, TIMESTEP);
    } else if (key == GLFW_KEY_RIGHT) {
        // theta defines l/r of the view. Positive to the right.
        theta += .1; // turn eye to the right
    } else if (key == GLFW_KEY_LEFT) {
        theta -= .1; // turn the eye to the left
    } else if (key == GLFW_KEY_UP) {
        // phi defines u/d of the view. Positive up.
        phi += .1; // turn the eye upward
    } else if (key == GLFW_KEY_DOWN) {
        phi -= .1; // turn the eye downward
    }
}


static void resize_callback(GLFWwindow *window, int width, int height) {
    g_width = width;
    g_height = height;
    glViewport(0, 0, width, height);
}
// calc_normal

void compute_normals(GLfloat vert_buffer[], GLfloat norm_buffer[])
{
    int idx1, idx2, idx3;
    float v[3][3];
    float norm[3];

    // cout << "full length: " << NUM_MULT * NUM_COORDS << endl;

    for (int i = 0; i < (NUM_COORDS * NUM_MULT)/3; i+=3) {
        //All the vertices should be in order in the first place ...
        idx1 = 3 * (i + 0);
        idx2 = 3 * (i + 1);
        idx3 = 3 * (i + 2);


        //The below should be all of the vertices for 1 triangle
        v[0][0] = vert_buffer[idx1+0];
        v[0][1] = vert_buffer[idx1+1];
        v[0][2] = vert_buffer[idx1+2];

        v[1][0]= vert_buffer[idx2+0];
        v[1][1]= vert_buffer[idx2+1];
        v[1][2]= vert_buffer[idx2+2];

        v[2][0]= vert_buffer[idx3+0];
        v[2][1]= vert_buffer[idx3+1];
        v[2][2]= vert_buffer[idx3+2];


        calc_normal(v, norm);

        norm_buffer[idx1+0] = norm[0];
        norm_buffer[idx2+0] = norm[0];
        norm_buffer[idx3+0] = norm[0];

        norm_buffer[idx1+1] = norm[1];
        norm_buffer[idx2+1] = norm[1];
        norm_buffer[idx3+1] = norm[1];

        norm_buffer[idx1+2] = norm[2];
        norm_buffer[idx2+2] = norm[2];
        norm_buffer[idx3+2] = norm[2];
    }
}


// TODO: I should also be able to calculate the normals here, because I have all
// the vertices of the triangles.
/*
 * Normals are stored in a normal buffer, 1:1 with the vertices.
 * That is, each one of the vertices stored here (in the triangles) gets a copy of
 * the normal for that triangle. So for a given triangle, its normal n will get stored
 * three times.
 */
static void convertVertices(GLfloat in_buffer[], GLfloat out_buffer[]) {
    GLfloat ax, ay, az, prime_ay, bx, by, bz, prime_by;
    int j = 0;
    int i;
    for (i = 0; i < NUM_COORDS - 3; i = i + 3) {
        ax = in_buffer[i];
        ay = in_buffer[i + 1];
        az = in_buffer[i + 2];
        bx = in_buffer[i + 3];
        by = in_buffer[i + 4];
        bz = in_buffer[i + 5];
        prime_ay = ay - .5;
        prime_by = by - .5;

        // TRIANGLE 1
        // Push A
        out_buffer[j++] = ax;
        out_buffer[j++] = ay;
        out_buffer[j++] = az;

        // Push A'
        out_buffer[j++] = ax;
        out_buffer[j++] = prime_ay;
        out_buffer[j++] = az;

        // Push B
        out_buffer[j++] = bx;
        out_buffer[j++] = by;
        out_buffer[j++] = bz;

        // TRIANGLE 2
        // Push B
        out_buffer[j++] = bx;
        out_buffer[j++] = by;
        out_buffer[j++] = bz;

        // Push A'
        out_buffer[j++] = ax;
        out_buffer[j++] = prime_ay;
        out_buffer[j++] = az;

        // Push B'
        out_buffer[j++] = bx;
        out_buffer[j++] = prime_by;
        out_buffer[j++] = bz;

    }
    // printf("Converted vertices, i = %d\n", i);
}

void walkTriangles(GLfloat in_buffer[], GLfloat out_buffer[]){
    int i;
    float j = 0.0;
    for (i = 0; i * 3 < NUM_COORDS * NUM_MULT; i++){
        if (i % 100 == 0) {
            j += .2;
            if (j >= 1.0){
                j = 0.0;
            }
        }
        out_buffer[i] = j;
    }
}


static void initGeom() {
    //generate vertex buffer to hand off to OGL
    convertVertices(ankle_buffer, g_vertex_ankle_buffer);
    convertVertices(knee_buffer, g_vertex_knee_buffer);
    compute_normals(g_vertex_ankle_buffer, g_vertex_ankle_normal_buffer);
    compute_normals(g_vertex_knee_buffer, g_vertex_knee_normal_buffer);
    walkTriangles(g_vertex_ankle_buffer, ankle_color_buffer);
    walkTriangles(g_vertex_ankle_buffer, knee_color_buffer);

    /* -------------------ANKLE----------------- */
    //generate the VAO
    glGenVertexArrays(1, &AnkleArrayID);
    glBindVertexArray(AnkleArrayID);

    // Ankle Vertex Buffer
    glGenBuffers(1, &ankle_vertexbuffer);
    //set the current state to focus on our vertex buffer
    glBindBuffer(GL_ARRAY_BUFFER, ankle_vertexbuffer);
    //actually memcopy the data - only do this once
    glBufferData(GL_ARRAY_BUFFER, sizeof(g_vertex_ankle_buffer), g_vertex_ankle_buffer, GL_DYNAMIC_DRAW);

    // Ankle Normal Buffer
    glGenBuffers(1, &AnkleNormalID);
    glBindBuffer(GL_ARRAY_BUFFER, AnkleNormalID);
    glBufferData(GL_ARRAY_BUFFER, sizeof(g_vertex_ankle_normal_buffer), g_vertex_ankle_normal_buffer, GL_STATIC_DRAW);

    glGenBuffers(1, &AnkleColorID);
    glBindBuffer(GL_ARRAY_BUFFER, AnkleColorID);
    glBufferData(GL_ARRAY_BUFFER, sizeof(ankle_color_buffer), ankle_color_buffer, GL_STATIC_DRAW);

    cout << glGetError() << endl;
    //clear
    glBindBuffer(GL_ARRAY_BUFFER, 0);

    /* ------------------- KNEE ------------------------*/
    glGenVertexArrays(1, &KneeArrayID);
    glBindVertexArray(KneeArrayID);

    glGenBuffers(1, &knee_vertexbuffer);
    glBindBuffer(GL_ARRAY_BUFFER, knee_vertexbuffer);
    glBufferData(GL_ARRAY_BUFFER, sizeof(g_vertex_knee_buffer), g_vertex_knee_buffer, GL_DYNAMIC_DRAW);

    glGenBuffers(1, &KneeNormalID);
    glBindBuffer(GL_ARRAY_BUFFER, KneeNormalID);
    glBufferData(GL_ARRAY_BUFFER, sizeof(g_vertex_knee_normal_buffer), g_vertex_knee_normal_buffer, GL_STATIC_DRAW);

    glGenBuffers(1, &KneeColorID);
    glBindBuffer(GL_ARRAY_BUFFER, KneeColorID);
    glBufferData(GL_ARRAY_BUFFER, sizeof(knee_color_buffer), knee_color_buffer, GL_STATIC_DRAW);

    //clear
    glBindBuffer(GL_ARRAY_BUFFER, 0);
}

static void init()
{
    GLSL::checkVersion();
    t = 0;
    // Set background color.
    glClearColor(.12f, .34f, .56f, 1.0f);
    // Enable z-buffer test.
    glEnable(GL_DEPTH_TEST);

    initGeom();

    texture0.setFilename(RESOURCE_DIR + "tartan.bmp");
    // Initialize textures
    texture0.setUnit(0);
    texture0.setName("Texture0");
    texture0.init();

    // Initialize the GLSL program.
    prog = make_shared<Program>();
    prog->setVerbose(true);
    prog->setShaderNames(RESOURCE_DIR + "simple_vert.glsl", RESOURCE_DIR + "simple_frag.glsl");
    prog->init();
    prog->addUniform("P");
    prog->addUniform("M");
    prog->addUniform("V");

    prog->addAttribute("vertPos");
    prog->addAttribute("vertNor");
    prog->addAttribute("vertColor");
    prog->addUniform("knee");
    prog->addUniform("lightDir");

    prog->addUniform("Texture0");
    prog->addTexture(&texture0);

    cam->init(window);
}

static void render()
{
    // Get current frame buffer size.
    int width, height;
    glfwGetFramebufferSize(window, &width, &height);
    glViewport(0, 0, width, height);

    // Clear framebuffer.
    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);

    float aspect = width / (float)height;

    // Create the matrix stacks
    auto P = make_shared<MatrixStack>();
    auto M = make_shared<MatrixStack>();
    auto V = make_shared<MatrixStack>();

    // Apply perspective projection.
    P->pushMatrix();
    P->perspective(45.0f, aspect, 0.01f, 100.0f);

    // bind this program, start drawing perspective
    prog->bind();
    glUniformMatrix4fv(prog->getUniform("P"), 1, GL_FALSE, P->topMatrix().data());
    glUniform1i(prog->getUniform("knee"), false);
    glUniform3f(prog->getUniform("lightDir"), -5, -3, 5);


    // cam->mouseTracking(window, TIMESTEP);
    // mouse_track(window);
    lookAtPt = Vector3f(cos(phi) * cos (theta), sin(phi), cos(phi) * cos((M_PI / 2) - theta)) + eye;
    calculate_directions();

    if (t > 100){
        cam->mouseTracking(window, TIMESTEP);
    } else {
        glfwSetCursorPos(window, 320, 240);
    }

    V->lookAt(cam->getPosition(), cam->getLookatPt(), cam->getUp());
    // V->lookAt(eye, lookAtPt, up);
    glUniformMatrix4fv(prog->getUniform("V"), 1, GL_FALSE, V->topMatrix().data());

    M->pushMatrix();
    M->loadIdentity();

    M->translate(Vector3f(0, 0, -20));
    M->rotate(90, Vector3f(1, 0, 0)); //Rotate by 90 degrees for correct orientation
        glUniformMatrix4fv(prog->getUniform("M"), 1, GL_FALSE, M->topMatrix().data());
        //set up pulling of vertices
        int num_to_draw = t * 9;
        int h_pos, h_nor, v;
        h_pos = h_nor = v = -1;

        /*-------------------------Draw ankle--------------------*/

        h_pos = prog->getAttribute("vertPos");
        glEnableVertexAttribArray(h_pos);
        glBindBuffer(GL_ARRAY_BUFFER, ankle_vertexbuffer);
        glVertexAttribPointer(h_pos, 3, GL_FLOAT, GL_FALSE, 0, (void*) 0); //function to get # of elements at a time
        // AHA i can use this to only send 2 at a time! this still doesn't solve my problems with repeated vertices ...

        //ankle normals

        h_nor = prog->getAttribute("vertNor");
        glEnableVertexAttribArray(h_nor);
        glBindBuffer(GL_ARRAY_BUFFER, AnkleNormalID);
        glVertexAttribPointer(h_nor, 3, GL_FLOAT, GL_FALSE, 0, (const void *)0);

        v = prog->getAttribute("vertColor");
        glEnableVertexAttribArray(v);
        glBindBuffer(GL_ARRAY_BUFFER, AnkleColorID);
        glVertexAttribPointer(v, 1, GL_FLOAT, GL_FALSE, 0, (const void *)0);

        glDrawArrays(GL_TRIANGLES, 0, num_to_draw); // TODO: adding a time based amt here
        glDisableVertexAttribArray(h_pos);
        glBindBuffer(GL_ARRAY_BUFFER, 0);

        /*--------------------------Draw knee---------------------*/

        h_pos = prog->getAttribute("vertPos");
        glUniform1i(prog->getUniform("knee"), true);
        glEnableVertexAttribArray(h_pos);
        glBindBuffer(GL_ARRAY_BUFFER, knee_vertexbuffer);
        glVertexAttribPointer(h_pos, 3, GL_FLOAT, GL_FALSE, 0, (void*) 0);

        //kneenormals
        h_nor = prog->getAttribute("vertNor");
        glEnableVertexAttribArray(h_nor);
        glBindBuffer(GL_ARRAY_BUFFER, KneeNormalID);
        glVertexAttribPointer(h_nor, 3, GL_FLOAT, GL_FALSE, 0, (const void *)0);

        v = prog->getAttribute("vertColor");
        glEnableVertexAttribArray(v);
        glBindBuffer(GL_ARRAY_BUFFER, KneeColorID);
        glVertexAttribPointer(v, 1, GL_FLOAT, GL_FALSE, 0, (const void *)0);

        glDrawArrays(GL_TRIANGLES, 0, num_to_draw);
        glDisableVertexAttribArray(h_pos);
        glBindBuffer(GL_ARRAY_BUFFER, 0);

    // Pop matrix stacks.
    M->popMatrix();
    P->popMatrix();

    prog->unbind();
    t++;
}

int main(int argc, char **argv)
{
    if (argc < 2) {
        cout << "Please specify the resource directory." << endl;
        return 0;
    }
    RESOURCE_DIR = argv[1] + string("/");

    // Set error callback.
    glfwSetErrorCallback(error_callback);
    // Initialize the library.
    if (!glfwInit()) {
        return -1;
    }
    //request the highest possible version of OGL - important for mac
    glfwWindowHint(GLFW_OPENGL_FORWARD_COMPAT, GL_TRUE);
    glfwWindowHint(GLFW_OPENGL_PROFILE, GLFW_OPENGL_CORE_PROFILE);
    glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, 3);
    glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, 2);

    // Create a windowed mode window and its OpenGL context.
    g_width = 640;
    g_height = 480;
    window = glfwCreateWindow(640, 480, "Draw The Thing", NULL, NULL);
    if (!window) {
        glfwTerminate();
        return -1;
    }
    // Make the window's context current.
    glfwMakeContextCurrent(window);
    // Initialize GLEW.
    glewExperimental = true;
    if (glewInit() != GLEW_OK) {
        cerr << "Failed to initialize GLEW" << endl;
        return -1;
    }
    //weird bootstrap of glGetError
    glGetError();
    cout << "OpenGL version: " << glGetString(GL_VERSION) << endl;
    cout << "GLSL version: " << glGetString(GL_SHADING_LANGUAGE_VERSION) << endl;

    // Set vsync.
    glfwSwapInterval(1);
    // Set keyboard callback.
    glfwSetKeyCallback(window, key_callback);
    glfwSetInputMode(window, GLFW_CURSOR, GLFW_CURSOR_DISABLED);
    //set the window resize call back
    glfwSetFramebufferSizeCallback(window, resize_callback);

    glfwSetCursorPos(window, g_width/2, g_height/2);
    // Initialize scene. Note that geometry initialized in init now
    init();

    // Loop until the user closes the window.
    while (!glfwWindowShouldClose(window)) {
        // Render scene.
        render();
        // Swap front and back buffers.
        glfwSwapBuffers(window);
        // Poll for and process events.
        glfwPollEvents();
    }
    // Quit program.
    glfwDestroyWindow(window);
    glfwTerminate();
    return 0;
}
